//Одиночка - порождающий паттерн, гарантирующий, что для класса будет создан только один объект, и предоставит точку доступа к этому объекту

using System;
using System.Threading;

public class Singleton
{
    public string Date { get; private set; }
    public static string text = "Singleton";
    private Singleton()
    {
        Console.WriteLine($"Singleton {DateTime.Now.TimeOfDay}");
        Date = DateTime.Now.TimeOfDay.ToString();
    }
 
    public static Singleton GetInstance()
    {
        Console.WriteLine($"GetInstance {DateTime.Now.TimeOfDay}");
        Thread.Sleep(500);
        return Nested.instance;
    }
 
    private class Nested
    {
        static Nested() { }
        internal static readonly Singleton instance = new Singleton();
    }
}
class Program
{
    static void Main(string[] args)
    {
      Console.WriteLine($"Main {DateTime.Now.TimeOfDay}");
      Console.WriteLine(Singleton.text);

      Singleton singleton1 = Singleton.GetInstance();
      Console.WriteLine(singleton1.Date);
      Console.Read();
    }
}
